// Generated by CoffeeScript 1.8.0
var namespace,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

namespace = function(name) {
  if (!window.Active) {
    window.Active = {};
  }
  return Active[name] = Active[name] || {};
};

namespace("Service");

Active.Service = (function() {
  function Service(options) {
    var _ref, _ref1, _ref2;
    if (options == null) {
      options = {};
    }
    Active.__service__ = this;
    Active.__ignore__ = (_ref = options.ignore) != null ? _ref : ["/default.aspx"];
    this.IndexPage = (_ref1 = options.IndexPage) != null ? _ref1 : "default.aspx";
    this.ServiceURL = (_ref2 = options.ServiceURL) != null ? _ref2 : "http://active-analytics.appspot.com";
    this.getPageSnapshot = (function(_this) {
      return function(url, callback) {
        if (url.slice(-1) === "/") {
          url += _this.IndexPage;
        }
        return _this.query("snapshot", {
          'url': url
        }, function(data) {
          return callback(new Active.ViewModels.Page(data));
        });
      };
    })(this);
    this.query = (function(_this) {
      return function(endpoint, params, callback) {
        return $.ajax({
          dataType: "jsonp",
          url: _this.ServiceURL + "/" + endpoint,
          data: params,
          success: function(data, xhr) {
            return callback(data);
          }
        });
      };
    })(this);
  }

  Service.getInstance = function(options) {
    var _ref;
    if (options == null) {
      options = {};
    }
    return (_ref = Active.__service__) != null ? _ref : new Active.Service(options);
  };

  return Service;

})();

namespace("Tools");

Active.Tools.HoverSuggestions = (function() {
  function HoverSuggestions() {}

  HoverSuggestions.getSuggestions = function(element) {
    var hattr;
    hattr = $(element).filter("[href^='/']");
    return hattr.tooltipster({
      content: "Loading...",
      interactive: true,
      contentAsHTML: true,
      position: 'bottom',
      functionBefore: function(origin, continueTooltip) {
        var href, service;
        continueTooltip();
        if (origin.data('ajax') !== 'cached') {
          href = origin.attr("href");
          service = Active.Service.getInstance();
          return service.getPageSnapshot(href, function(page) {
            var links, npages, suggestion, title, _i, _len, _ref;
            links = "";
            npages = page.NextPages.filter(function(x) {
              var _ref;
              return _ref = x.url, __indexOf.call(Active.__ignore__, _ref) < 0;
            });
            _ref = npages.slice(0, 6);
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              suggestion = _ref[_i];
              title = suggestion.title.replace(/(UNF - |University of North Florida - )/g, '');
              links += "<li><a style='color:white' href='" + suggestion.url + "'>" + title + "</a></li>";
            }
            return origin.tooltipster('content', $("<ul>" + links + "</ul>")).data('ajax', 'cached');
          });
        }
      }
    });
  };

  return HoverSuggestions;

})();

namespace("ViewModels");


/*
ViewModels
 */

Active.ViewModels.Page = (function() {
  function Page(data, options) {
    if (data == null) {
      data = {};
    }
    if (options == null) {
      options = {};
    }
    this.URL = data.url;
    this.Date = data.date;
    this.DestPages = data.destPages;
    this.PrevPages = data.prevPages;
    this.NextPages = data.nextPages;
  }

  return Page;

})();

$(function() {});
